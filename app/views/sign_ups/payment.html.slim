h1= translate('menu.create_subscription')

=render partial: 'sign_ups/product'

h4= translate('sign_up.payment')

script src="https://js.stripe.com/v3/"

= form_for User.new, url: wizard_path, method: :put, html: {id: 'payment-form'} do |f|
  #card-element style='background-color: #FFF; border-radius: 10px; padding: 5px;margin-top: 20px'

  #card-errors

  - flash.each do |key, value|
    br
    div class="alert alert-#{key}" = value
  .row style='margin-top: 40px;'
    .col.voucher-container
      label.voucher-heading for="voucher"
        = translate('sign_up.voucher')
      br/
      input.coupon.form-control placeholder="XXXXXXX" /
      button.apply-btn onclick=("checkCoupon(); return false;")
        = translate('sign_up.voucher_apply_btn')
      = f.hidden_field :coupon, :value => ""
      = f.hidden_field :check_applied, :value => ""

    .col.col-md-auto
      fieldset.actions
        ol
          li.action.input-action
            input.btn.btn-lg.btn-primary.btn-block type='submit' id='submitbutton' value=translate('sign_up.pay') data-disable-with=translate('sign_up.pay')

  .row style='margin-top: 40px;'
    .col style="clear:both;"
      p.voucher-note
        = translate('sign_up.voucher_note')

javascript:
    // Copy + paste code from Stripe


    // Create a Stripe client
    var stripe = Stripe("#{Rails.configuration.stripe_public_key}");

    // Create an instance of Elements
    var elements = stripe.elements();

    // Custom styling can be passed to options when creating an Element.
    // (Note that this demo uses a wider set of styles than the guide below.)
    var style = {
        base: {
            color: '#32325d',
            lineHeight: '24px',
            fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
            fontSmoothing: 'antialiased',
            fontSize: '18px',
            '::placeholder': {
                color: '#aab7c4'
            }
        },
        invalid: {
            color: '#fa755a',
            iconColor: '#fa755a'
        }
    };

    // Create an instance of the card Element
    var card = elements.create('card', {style: style, hidePostalCode: true});

    // Add an instance of the card Element into the `card-element` <div>
    card.mount('#card-element');

    // Handle real-time validation errors from the card Element.
    card.addEventListener('change', function (event) {
        var displayError = document.getElementById('card-errors');
        if (event.error) {
            displayError.textContent = event.error.message;
        } else {
            displayError.textContent = '';
        }
    });

    // Handle form submission
    var form = document.getElementById('payment-form');
    form.addEventListener('submit', function (event) {
        event.preventDefault();

        stripe.createToken(card).then(function (result) {
            if (result.error) {
                // Inform the user if there was an error
                var errorElement = document.getElementById('card-errors');
                errorElement.textContent = result.error.message;

                // House of Code custom
                $('#submitbutton').prop( "disabled", false );
            } else {
                // Send the token to your server
                stripeTokenHandler(result.token);
            }
        });
    });

    function stripeTokenHandler(token) {
        // Insert the token ID into the form so it gets submitted to the server
        var form = document.getElementById('payment-form');
        var hiddenInput = document.createElement('input');
        hiddenInput.setAttribute('type', 'hidden');
        hiddenInput.setAttribute('name', 'stripeToken');
        hiddenInput.setAttribute('value', token.id);
        form.appendChild(hiddenInput);

        // Submit the form
        form.submit();
    }

    $(document).ready(function(){
      $('.coupon').on("change keyup input", function() {
        var coupon = $(this).val();
        $("#user_check_applied").val(false);
        $("#user_coupon").val(coupon);
        $.ajax({
          type:'POST',
          url: '/check_coupon',
          dataType: "script",
          data: { coupon: coupon },
          success: function(response){
            if (response == "true"){
              $("button.apply-btn").css('background', 'green');
            }
          },
          error: function(response) {
            $(".apply-btn").text("#{translate('sign_up.voucher_apply_btn')}")
            $("button.apply-btn").css('background', 'green');
          }
        });
      });
    })

    function checkCoupon() {
      var coupon = $(".coupon").val()
      $("#user_coupon").val(coupon);
      $.ajax({
        type:'POST',
        url: '/check_coupon',
        dataType: "script",
        data: { coupon: coupon },
        success: function(response){
          if (response == "true"){
            $("#user_check_applied").val(true);
            $("button.apply-btn").css('background', 'green');
            $(".apply-btn").text("âœ“")
          }
        },
        error: function(response) {
          $("#user_check_applied").val(false);
          $("button.apply-btn").css('background', 'grey');
          alert("#{translate('sign_up.voucher_error')}");
        }
      });
    };
